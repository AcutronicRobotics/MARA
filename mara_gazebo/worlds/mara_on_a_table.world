<sdf version='1.6'>
  <world name="default">

    <include>
      <uri>model://ground_plane</uri>
    </include>

    <include>
      <uri>model://sun</uri>
    </include>

    <scene>
      <shadows>false</shadows>
    </scene>

    <model name='mara'>
      <link name='table'>
        <pose frame=''>0 0 0.02 0 -0 0</pose>
        <inertial>
          <pose frame=''>0 -5e-06 0.68145 0 -0 0</pose>
          <mass>7.033</mass>
          <inertia>
            <ixx>1.14783</ixx>
            <ixy>-1e-05</ixy>
            <ixz>-5.29396e-23</ixz>
            <iyy>1.14782</iyy>
            <iyz>-3.38813e-21</iyz>
            <izz>1.29472</izz>
          </inertia>
        </inertial>
        <collision name='table_collision'>
          <pose frame=''>0 0 0.6 0 -0 0</pose>
          <geometry>
            <box>
              <size>1.5 1 0.05</size>
            </box>
          </geometry>
        </collision>
        <collision name='table_fixed_joint_lump__base_link_collision_1'>
          <pose frame=''>0 0 0.65 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_BASE.stl</uri>
            </mesh>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
          </surface>
        </collision>
        <visual name='table_visual'>
          <pose frame=''>0 0 0.6 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1.5 1 0.05</scale>
              <uri>model://mara_description/urdf/table.obj</uri>
            </mesh>
          </geometry>
        </visual>
        <visual name='table_visual_1'>
          <pose frame=''>-0.65 -0.4 0.29 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.1 0.1 0.58</scale>
              <uri>model://mara_description/urdf/table.obj</uri>
            </mesh>
          </geometry>
        </visual>
        <visual name='table_visual_2'>
          <pose frame=''>-0.65 0.4 0.29 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.1 0.1 0.58</scale>
              <uri>model://mara_description/urdf/table.obj</uri>
            </mesh>
          </geometry>
        </visual>
        <visual name='table_visual_3'>
          <pose frame=''>0.65 -0.4 0.29 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.1 0.1 0.58</scale>
              <uri>model://mara_description/urdf/table.obj</uri>
            </mesh>
          </geometry>
        </visual>
        <visual name='table_visual_4'>
          <pose frame=''>0.65 0.4 0.29 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.1 0.1 0.58</scale>
              <uri>model://mara_description/urdf/table.obj</uri>
            </mesh>
          </geometry>
        </visual>
        <visual name='table_fixed_joint_lump__base_link_visual_5'>
          <pose frame=''>0 0 0.65 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_BASE.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Grey</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>1</self_collide>
      </link>
      <joint name='world_to_table_joint' type='fixed'>
        <child>table</child>
        <parent>world</parent>
      </joint>
      <link name='motor1_link'>
        <pose frame=''>0 0 0.67625 0 -0 0</pose>
        <inertial>
          <pose frame=''>0 -5e-06 0.03145 0 -0 0</pose>
          <mass>5.8</mass>
          <inertia>
            <ixx>0.101059</ixx>
            <ixy>0.000211</ixy>
            <ixz>-0.004</ixz>
            <iyy>0.0938662</iyy>
            <iyz>-0.0169854</iyz>
            <izz>0.0144994</izz>
          </inertia>
        </inertial>
        <collision name='motor1_link_collision'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_mara1.stl</uri>
            </mesh>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
          </surface>
        </collision>
        <visual name='motor1_link_visual'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_mara1.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/White</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <self_collide>1</self_collide>

        <sensor name="my_imu" type="imu">
          <always_on>true</always_on>
          <update_rate>30</update_rate>
          <imu>
            <angular_velocity>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </z>
            </angular_velocity>
            <linear_acceleration>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </z>
            </linear_acceleration>
          </imu>
          <plugin name="hros_actuation_servomotor_000000000001" filename="libgazebo_ros_imu_sensor.so">
            <ros>
              <namespace>/hros_actuation_servomotor_000000000001</namespace>
              <argument>~/out:=imu</argument>
            </ros>
          </plugin>
        </sensor>
      </link>
      <joint name='motor1' type='revolute'>
        <child>motor1_link</child>
        <parent>table</parent>
        <axis>
          <xyz>0 0 -1</xyz>
          <limit>
            <lower>-2.3562</lower>
            <upper>2.3562</upper>
            <effort>330</effort>
            <velocity>3.1416</velocity>
          </limit>
        </axis>
      </joint>
      <link name='motor2_link'>
        <pose frame=''>0 -0.1005 0.83075 0 -0 0</pose>
        <inertial>
          <pose frame=''>0 -5e-06 0.03145 0 -0 0</pose>
          <mass>1.03237</mass>
          <inertia>
            <ixx>0.0148652</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.01557</iyy>
            <iyz>0.00071</iyz>
            <izz>0.00092</izz>
          </inertia>
        </inertial>
        <collision name='motor2_link_collision'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_LINK1.stl</uri>
            </mesh>
          </geometry>
        </collision>
        <visual name='motor2_link_visual'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_LINK1.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <self_collide>1</self_collide>
      </link>
      <joint name='motor2' type='revolute'>
        <child>motor2_link</child>
        <parent>motor1_link</parent>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-3.13</lower>
            <upper>3.13</upper>
            <effort>330</effort>
            <velocity>3.1416</velocity>
          </limit>
        </axis>
      </joint>
      <link name='motor3_link'>
        <pose frame=''>0 -0.101 1.03075 0 -0 0</pose>
        <inertial>
          <pose frame=''>0 -5e-06 0.03145 0 -0 0</pose>
          <mass>3.8</mass>
          <inertia>
            <ixx>0.04517</ixx>
            <ixy>2e-05</ixy>
            <ixz>0</ixz>
            <iyy>0.01587</iyy>
            <iyz>0.01444</iyz>
            <izz>0.03303</izz>
          </inertia>
        </inertial>
        <collision name='motor3_link_collision'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_mara2.stl</uri>
            </mesh>
          </geometry>
        </collision>
        <visual name='motor3_link_visual'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_mara2.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/White</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <gravity>1</gravity>
        <self_collide>1</self_collide>
        <sensor name="my_imu" type="imu">
          <pose frame=''>0 0 0 0 3.14 0</pose>
          <always_on>true</always_on>
          <update_rate>30</update_rate>
          <imu>
            <angular_velocity>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </z>
            </angular_velocity>
            <linear_acceleration>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </z>
            </linear_acceleration>
          </imu>
          <plugin name="hros_actuation_servomotor_000000000002" filename="libgazebo_ros_imu_sensor.so">
            <ros>
              <namespace>/hros_actuation_servomotor_000000000002</namespace>
              <argument>~/out:=imu</argument>
            </ros>
          </plugin>
        </sensor>
      </link>
      <joint name='motor3' type='revolute'>
        <child>motor3_link</child>
        <parent>motor2_link</parent>
        <axis>
          <xyz>0 -1 0</xyz>
          <limit>
            <lower>-3.13</lower>
            <upper>3.13</upper>
            <effort>330</effort>
            <velocity>3.1416</velocity>
          </limit>
        </axis>
      </joint>
      <link name='motor4_link'>
        <pose frame=''>0 -0.00101 1.16075 0 -0 0</pose>
        <inertial>
          <pose frame=''>0 -5e-06 0.03145 0 -0 0</pose>
          <mass>1.1</mass>
          <inertia>
            <ixx>0.01464</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.00895</iyy>
            <iyz>-0.00631</iyz>
            <izz>0.00725</izz>
          </inertia>
        </inertial>
        <collision name='motor4_link_collision'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_LINK2.stl</uri>
            </mesh>
          </geometry>
        </collision>
        <visual name='motor4_link_visual'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_LINK2.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>1</self_collide>
      </link>
      <joint name='motor4' type='revolute'>
        <child>motor4_link</child>
        <parent>motor3_link</parent>
        <axis>
          <xyz>0 0 -1</xyz>
          <limit>
            <lower>-3.13</lower>
            <upper>3.13</upper>
            <effort>330</effort>
            <velocity>3.1416</velocity>
          </limit>
        </axis>
      </joint>
      <link name='motor5_link'>
        <pose frame=''>0 -0.098009 1.31981 0 -0 0</pose>
        <inertial>
          <pose frame=''>0 -5e-06 0.03145 0 -0 0</pose>
          <mass>2.9</mass>
          <inertia>
            <ixx>0.03406</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.01066</iyy>
            <iyz>0.00989</iyz>
            <izz>0.02563</izz>
          </inertia>
        </inertial>
        <collision name='motor5_link_collision'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_mara3.stl</uri>
            </mesh>
          </geometry>
        </collision>
        <visual name='motor5_link_visual'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/H-ROS_Robot_mara3.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/White</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <self_collide>1</self_collide>
        <sensor name="my_imu" type="imu">
          <always_on>true</always_on>
          <update_rate>30</update_rate>
          <pose frame=''>0 0 0 0 3.14 0</pose>
          <imu>
            <angular_velocity>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </z>
            </angular_velocity>
            <linear_acceleration>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </z>
            </linear_acceleration>
          </imu>
          <plugin name="hros_actuation_servomotor_000000000003" filename="libgazebo_ros_imu_sensor.so">
            <ros>
              <namespace>/hros_actuation_servomotor_000000000003</namespace>
              <argument>~/out:=imu</argument>
            </ros>
          </plugin>
        </sensor>
      </link>
      <joint name='motor5' type='revolute'>
        <child>motor5_link</child>
        <parent>motor4_link</parent>
        <axis>
          <xyz>0 -1 0</xyz>
          <limit>
            <lower>-3.13</lower>
            <upper>3.13</upper>
            <effort>330</effort>
            <velocity>3.1416</velocity>
          </limit>
        </axis>
      </joint>
      <link name='motor6_link'>
        <pose frame=''>0 -0.001009 1.44631 0 -0 0</pose>
        <inertial>
          <pose frame=''>0 -5e-06 0.03145 0 -0 0</pose>
          <mass>2.9</mass>
          <inertia>
            <ixx>0.0005</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.0005</iyy>
            <iyz>0</iyz>
            <izz>0.0003</izz>
          </inertia>
        </inertial>
        <collision name='motor6_link_collision'>
          <pose frame=''>0 0 0 0 -0 1.04667</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/gripper_support.stl</uri>
            </mesh>
          </geometry>
        </collision>
        <visual name='motor6_link_visual'>
          <pose frame=''>0 0 0 0 -0 1.04667</pose>
          <geometry>
            <mesh>
              <scale>0.001 0.001 0.001</scale>
              <uri>model://mara_description/meshes/gripper_support.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <self_collide>1</self_collide>
      </link>
      <joint name='motor6' type='revolute'>
        <child>motor6_link</child>
        <parent>motor5_link</parent>
        <axis>
          <xyz>0 0 -1</xyz>
          <limit>
            <lower>-3.13</lower>
            <upper>3.13</upper>
            <effort>330</effort>
            <velocity>3.1416</velocity>
          </limit>
        </axis>
      </joint>
      <static>0</static>

    <plugin name="mara_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
		<ros>
			<!-- <namespace>/mara</namespace> -->
			<argument>~/out:=joint_states</argument>
		</ros>
		<update_rate>250</update_rate>
		<joint_name>motor1</joint_name>
		<joint_name>motor2</joint_name>
		<joint_name>motor3</joint_name>
		<joint_name>motor4</joint_name>
		<joint_name>motor5</joint_name>
    <joint_name>motor6</joint_name>
	</plugin>

  <plugin name="hros_actuation_servomotor_000000000001" filename="libmara_gazebo_joint_training_plugin.so">
    <ros>
      <!-- <namespace>/tb3</namespace> -->
    </ros>

    <axis1>motor2</axis1>
    <axis2>motor1</axis2>
  </plugin>

  <plugin name="hros_actuation_servomotor_000000000002" filename="libmara_gazebo_joint_training_plugin.so">
    <ros>
      <!-- <namespace>/tb3</namespace> -->
    </ros>

    <axis1>motor3</axis1>
    <axis2>motor4</axis2>
  </plugin>

  <plugin name="hros_actuation_servomotor_000000000003" filename="libmara_gazebo_joint_training_plugin.so">
    <ros>
      <!-- <namespace>/tb3</namespace> -->
    </ros>

    <axis1>motor5</axis1>
    <axis2>motor6</axis2>
  </plugin>


  </model>
  </world>
</sdf>
